let dictionaryData=null,lastSearchStatus=!0;const inputTag=document.querySelector("#input"),dataURL="./data.json",getData=fetch(dataURL).then(response=>response.json()).then(data=>{dictionaryData=data}).catch(error=>{console.log(error)});function alphabetSort(words){return words.sort((s1,s2)=>s1.localeCompare(s2))}function findWordOrder(word){return word[0].charCodeAt(0)-97}function searchWord(word){const displayWord=document.querySelector(".display-word");let wordOrder=findWordOrder(word),html="";const listWords=alphabetSort(Object.keys(dictionaryData[wordOrder]));listWords.map(key=>{if(key===word)return html=`<h2>${key}</h2>\n      <p>${dictionaryData[wordOrder][key]}</p>`,void(displayWord.innerHTML=html)})}function binarySearch(target,words){let right=0,left=words.length;for(;right<left;){let mid=Math.floor((right+left)/2);if(words[mid].startsWith(target))return!0;1==words[mid].localeCompare(target)?left=mid+1:-1==words[mid].localeCompare(target)&&(right=mid-1)}}function searchHintsWord(searchWord){const searchedWords=[];let searchWordOrder=findWordOrder(searchWord);const sortedWords=alphabetSort(Object.keys(dictionaryData[searchWordOrder]));for(const word of sortedWords){if(5==searchedWords.length)return searchedWords;word.startsWith(searchWord)&&searchedWords.push(word)}return lastSearchStatus=0!=searchedWords.length,searchedWords}function displayHintsWord(searchWords){const listHintWord=document.querySelector(".searched");let html="";searchWords.map(word=>{html+=`<p onclick="searchWord(this.innerHTML)">${word}</p>`}),listHintWord.innerHTML=html}function isValidInput(word){const validWord=/^[A-Za-z]+$/;return!!word.match(validWord)}inputTag.oninput=event=>{if(event.target.value&&(lastSearchStatus=!0),console.log(lastSearchStatus),lastSearchStatus){const normalizeWord=event.target.value.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,""),isValid=isValidInput(normalizeWord);if(isValid){const listWord=searchHintsWord(normalizeWord);displayHintsWord(listWord)}}};